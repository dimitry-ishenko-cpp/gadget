////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef GADGET_LED_HPP
#define GADGET_LED_HPP

////////////////////////////////////////////////////////////////////////////////
#include <gadget++/gadget_base.hpp>
#include <gadget++/types.hpp>

#include <asio/io_service.hpp>

////////////////////////////////////////////////////////////////////////////////
namespace gadget
{

////////////////////////////////////////////////////////////////////////////////
class led : public gadget_base
{
public:
    ////////////////////
    led(asio::io_service&, gpio::pin* pin) : gadget_base(pin) { }

    ////////////////////
    bool is_dimmable() const noexcept;

    void turn(gadget::state state) { pin_->set(state); }
    gadget::state state() { return pin_->state(); }

    void on() { turn(gadget::on); }
    void off() { turn(gadget::off); }

    void dim(percent pc) { pin_->duty_cycle(pc); }
    percent level() const noexcept { return pin_->duty_cycle(); }
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif

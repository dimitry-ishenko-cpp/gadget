////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include <gadget++/gadget_base.hpp>

////////////////////////////////////////////////////////////////////////////////
namespace gadget
{

////////////////////////////////////////////////////////////////////////////////
gadget_base::~gadget_base() { if(pin_) reset_cid(); }

////////////////////////////////////////////////////////////////////////////////
gadget_base::gadget_base(gadget_base&& rhs) noexcept :
    pin_(rhs.pin_), id_(rhs.id_)
{
    rhs.pin_ = nullptr; rhs.id_ = ncid;
}

////////////////////////////////////////////////////////////////////////////////
gadget_base& gadget_base::operator=(gadget_base&& rhs) noexcept
{
    this->gadget_base::~gadget_base();
    new (this) gadget_base(std::move(rhs));

    return *this;
}

////////////////////////////////////////////////////////////////////////////////
void gadget_base::reset_cid(gpio::cid id)
{
    pin_->remove(id_);
    id_ = id;
}

////////////////////////////////////////////////////////////////////////////////
}

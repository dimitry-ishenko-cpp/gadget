////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include <gadget++/rgb_led.hpp>
#include <algorithm>

////////////////////////////////////////////////////////////////////////////////
namespace gadget
{

////////////////////////////////////////////////////////////////////////////////
namespace
{

inline percent clamp(percent pc)
{
    return std::max(std::min(pc, 100_pc), 0_pc);
}

}

////////////////////////////////////////////////////////////////////////////////
rgb_led::rgb_led(asio::io_service& io, gpio::pin* red, gpio::pin* green, gpio::pin* blue) :
    red_(io, red), green_(io, green), blue_(io, blue)
{ }

////////////////////////////////////////////////////////////////////////////////
void rgb_led::set(const gadget::color& color)
{
    color_.red = clamp(color.red);
    color_.green = clamp(color.green);
    color_.blue = clamp(color.blue);
    update();
}

////////////////////////////////////////////////////////////////////////////////
void rgb_led::turn(gadget::state state)
{
    pc_ = state == gadget::off ? 0_pc : 100_pc;
    update();
}

////////////////////////////////////////////////////////////////////////////////
void rgb_led::dim(percent pc)
{
    pc_ = clamp(pc);
    update();
}

////////////////////////////////////////////////////////////////////////////////
void rgb_led::update()
{
    red_.dim(color_.red * pc_);
    green_.dim(color_.green * pc_);
    blue_.dim(color_.blue * pc_);
}

////////////////////////////////////////////////////////////////////////////////
}

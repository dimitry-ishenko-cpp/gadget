////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include <gadget++/rgb_led.hpp>
#include <algorithm>

////////////////////////////////////////////////////////////////////////////////
namespace gadget
{

////////////////////////////////////////////////////////////////////////////////
namespace
{

inline percent clamp(percent pc)
{
    return std::max(std::min(pc, 100_pc), 0_pc);
}

}

////////////////////////////////////////////////////////////////////////////////
rgb_led::rgb_led(gpio::pin* red, gpio::pin* green, gpio::pin* blue) :
    red_(red), green_(green), blue_(blue)
{ }

////////////////////////////////////////////////////////////////////////////////
void rgb_led::color(const gadget::color& color)
{
    color_.red   = clamp(color.red  );
    color_.green = clamp(color.green);
    color_.blue  = clamp(color.blue );
    sync_state();
}

////////////////////////////////////////////////////////////////////////////////
void rgb_led::turn(gadget::state state)
{
    pc_ = state == gadget::on ? 100_pc : 0_pc;
    sync_state();
}

////////////////////////////////////////////////////////////////////////////////
void rgb_led::dim(percent pc)
{
    pc_ = clamp(pc);
    sync_state();
}

////////////////////////////////////////////////////////////////////////////////
void rgb_led::sync_state()
{
      red_.dim(color_.red   * pc_ / 100_pc);
    green_.dim(color_.green * pc_ / 100_pc);
     blue_.dim(color_.blue  * pc_ / 100_pc);
}

////////////////////////////////////////////////////////////////////////////////
}
